
without_volatile:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x213>
  400248:	78 38                	js     400282 <_init-0x206>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 f2                	add    %dh,%dl
  400285:	5d                   	pop    %rbp
  400286:	c7                   	(bad)  
  400287:	92                   	xchg   %eax,%edx
  400288:	f8                   	clc    
  400289:	3b 58 19             	cmp    0x19(%rax),%ebx
  40028c:	ff f5                	push   %rbp
  40028e:	cb                   	lret   
  40028f:	e0 6e                	loopne 4002ff <_init-0x189>
  400291:	e4 b9                	in     $0xb9,%al
  400293:	e3 4f                	jrcxz  4002e4 <_init-0x1a4>
  400295:	d8 c3                	fadd   %st(3),%st
  400297:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	11 00                	adc    %eax,(%rax)
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	2a 00                	sub    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	37                   	(bad)  
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 49 00             	add    %cl,0x0(%rcx)
  40031a:	00 00                	add    %al,(%rax)
  40031c:	20 00                	and    %al,(%rax)
	...
  40032e:	00 00                	add    %al,(%rax)
  400330:	31 00                	xor    %eax,(%rax)
  400332:	00 00                	add    %al,(%rax)
  400334:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400348 <.dynstr>:
  400348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40034c:	70 74                	jo     4003c2 <_init-0xc6>
  40034e:	68 72 65 61 64       	pushq  $0x64616572
  400353:	2e 73 6f             	jae,pn 4003c5 <_init-0xc3>
  400356:	2e 30 00             	xor    %al,%cs:(%rax)
  400359:	70 74                	jo     4003cf <_init-0xb9>
  40035b:	68 72 65 61 64       	pushq  $0x64616572
  400360:	5f                   	pop    %rdi
  400361:	63 72 65             	movslq 0x65(%rdx),%esi
  400364:	61                   	(bad)  
  400365:	74 65                	je     4003cc <_init-0xbc>
  400367:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40036b:	63 2e                	movslq (%rsi),%ebp
  40036d:	73 6f                	jae    4003de <_init-0xaa>
  40036f:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400374:	69 6e 74 66 00 73 6c 	imul   $0x6c730066,0x74(%rsi),%ebp
  40037b:	65 65 70 00          	gs gs jo 40037f <_init-0x109>
  40037f:	5f                   	pop    %rdi
  400380:	5f                   	pop    %rdi
  400381:	6c                   	insb   (%dx),%es:(%rdi)
  400382:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400389:	72 74                	jb     4003ff <_init-0x89>
  40038b:	5f                   	pop    %rdi
  40038c:	6d                   	insl   (%dx),%es:(%rdi)
  40038d:	61                   	(bad)  
  40038e:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400395:	6f                   	outsl  %ds:(%rsi),(%dx)
  400396:	6e                   	outsb  %ds:(%rsi),(%dx)
  400397:	5f                   	pop    %rdi
  400398:	73 74                	jae    40040e <_init-0x7a>
  40039a:	61                   	(bad)  
  40039b:	72 74                	jb     400411 <_init-0x77>
  40039d:	5f                   	pop    %rdi
  40039e:	5f                   	pop    %rdi
  40039f:	00 47 4c             	add    %al,0x4c(%rdi)
  4003a2:	49                   	rex.WB
  4003a3:	42                   	rex.X
  4003a4:	43 5f                	rex.XB pop %r15
  4003a6:	32 2e                	xor    (%rsi),%ch
  4003a8:	32 2e                	xor    (%rsi),%ch
  4003aa:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003ac <.gnu.version>:
  4003ac:	00 00                	add    %al,(%rax)
  4003ae:	02 00                	add    (%rax),%al
  4003b0:	03 00                	add    (%rax),%eax
  4003b2:	03 00                	add    (%rax),%eax
  4003b4:	00 00                	add    %al,(%rax)
  4003b6:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000004003b8 <.gnu.version_r>:
  4003b8:	01 00                	add    %eax,(%rax)
  4003ba:	01 00                	add    %eax,(%rax)
  4003bc:	20 00                	and    %al,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	10 00                	adc    %al,(%rax)
  4003c2:	00 00                	add    %al,(%rax)
  4003c4:	20 00                	and    %al,(%rax)
  4003c6:	00 00                	add    %al,(%rax)
  4003c8:	75 1a                	jne    4003e4 <_init-0xa4>
  4003ca:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
  4003d0:	58                   	pop    %rax
  4003d1:	00 00                	add    %al,(%rax)
  4003d3:	00 00                	add    %al,(%rax)
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 01                	add    %al,(%rcx)
  4003d9:	00 01                	add    %al,(%rcx)
  4003db:	00 01                	add    %al,(%rcx)
  4003dd:	00 00                	add    %al,(%rax)
  4003df:	00 10                	add    %dl,(%rax)
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 00                	add    %al,(%rax)
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 75 1a             	add    %dh,0x1a(%rbp)
  4003ea:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003f0:	58                   	pop    %rax
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 00                	add    %al,(%rax)
  4003f5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003f8 <.rela.dyn>:
  4003f8:	f8                   	clc    
  4003f9:	0f 60 00             	punpcklbw (%rax),%mm0
  4003fc:	00 00                	add    %al,(%rax)
  4003fe:	00 00                	add    %al,(%rax)
  400400:	06                   	(bad)  
  400401:	00 00                	add    %al,(%rax)
  400403:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

0000000000400410 <.rela.plt>:
  400410:	18 10                	sbb    %dl,(%rax)
  400412:	60                   	(bad)  
  400413:	00 00                	add    %al,(%rax)
  400415:	00 00                	add    %al,(%rax)
  400417:	00 07                	add    %al,(%rdi)
  400419:	00 00                	add    %al,(%rax)
  40041b:	00 01                	add    %al,(%rcx)
	...
  400425:	00 00                	add    %al,(%rax)
  400427:	00 20                	add    %ah,(%rax)
  400429:	10 60 00             	adc    %ah,0x0(%rax)
  40042c:	00 00                	add    %al,(%rax)
  40042e:	00 00                	add    %al,(%rax)
  400430:	07                   	(bad)  
  400431:	00 00                	add    %al,(%rax)
  400433:	00 02                	add    %al,(%rdx)
	...
  40043d:	00 00                	add    %al,(%rax)
  40043f:	00 28                	add    %ch,(%rax)
  400441:	10 60 00             	adc    %ah,0x0(%rax)
  400444:	00 00                	add    %al,(%rax)
  400446:	00 00                	add    %al,(%rax)
  400448:	07                   	(bad)  
  400449:	00 00                	add    %al,(%rax)
  40044b:	00 03                	add    %al,(%rbx)
	...
  400455:	00 00                	add    %al,(%rax)
  400457:	00 30                	add    %dh,(%rax)
  400459:	10 60 00             	adc    %ah,0x0(%rax)
  40045c:	00 00                	add    %al,(%rax)
  40045e:	00 00                	add    %al,(%rax)
  400460:	07                   	(bad)  
  400461:	00 00                	add    %al,(%rax)
  400463:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40046e:	00 00                	add    %al,(%rax)
  400470:	38 10                	cmp    %dl,(%rax)
  400472:	60                   	(bad)  
  400473:	00 00                	add    %al,(%rax)
  400475:	00 00                	add    %al,(%rax)
  400477:	00 07                	add    %al,(%rdi)
  400479:	00 00                	add    %al,(%rax)
  40047b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400481 <_init-0x7>
  400481:	00 00                	add    %al,(%rax)
  400483:	00 00                	add    %al,(%rax)
  400485:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000400488 <_init>:
  400488:	48 83 ec 08          	sub    $0x8,%rsp
  40048c:	48 8b 05 65 0b 20 00 	mov    0x200b65(%rip),%rax        # 600ff8 <__gmon_start__>
  400493:	48 85 c0             	test   %rax,%rax
  400496:	74 05                	je     40049d <_init+0x15>
  400498:	e8 53 00 00 00       	callq  4004f0 <__gmon_start__@plt>
  40049d:	48 83 c4 08          	add    $0x8,%rsp
  4004a1:	c3                   	retq   

Disassembly of section .plt:

00000000004004b0 <.plt>:
  4004b0:	ff 35 52 0b 20 00    	pushq  0x200b52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004b6:	ff 25 54 0b 20 00    	jmpq   *0x200b54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004c0 <pthread_create@plt>:
  4004c0:	ff 25 52 0b 20 00    	jmpq   *0x200b52(%rip)        # 601018 <pthread_create@GLIBC_2.2.5>
  4004c6:	68 00 00 00 00       	pushq  $0x0
  4004cb:	e9 e0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 4a 0b 20 00    	jmpq   *0x200b4a(%rip)        # 601020 <printf@GLIBC_2.2.5>
  4004d6:	68 01 00 00 00       	pushq  $0x1
  4004db:	e9 d0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004e0 <__libc_start_main@plt>:
  4004e0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601028 <__libc_start_main@GLIBC_2.2.5>
  4004e6:	68 02 00 00 00       	pushq  $0x2
  4004eb:	e9 c0 ff ff ff       	jmpq   4004b0 <.plt>

00000000004004f0 <__gmon_start__@plt>:
  4004f0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601030 <__gmon_start__>
  4004f6:	68 03 00 00 00       	pushq  $0x3
  4004fb:	e9 b0 ff ff ff       	jmpq   4004b0 <.plt>

0000000000400500 <sleep@plt>:
  400500:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601038 <sleep@GLIBC_2.2.5>
  400506:	68 04 00 00 00       	pushq  $0x4
  40050b:	e9 a0 ff ff ff       	jmpq   4004b0 <.plt>

Disassembly of section .text:

0000000000400510 <main>:
  400510:	48 83 ec 18          	sub    $0x18,%rsp
  400514:	8b 35 36 0b 20 00    	mov    0x200b36(%rip),%esi        # 601050 <num_aa>
  40051a:	ba 05 00 00 00       	mov    $0x5,%edx
  40051f:	bf 88 07 40 00       	mov    $0x400788,%edi
  400524:	31 c0                	xor    %eax,%eax
  400526:	c7 05 18 0b 20 00 05 	movl   $0x5,0x200b18(%rip)        # 601048 <num_cc>
  40052d:	00 00 00 
  400530:	89 35 16 0b 20 00    	mov    %esi,0x200b16(%rip)        # 60104c <num_bb>
  400536:	e8 95 ff ff ff       	callq  4004d0 <printf@plt>
  40053b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  400540:	31 c9                	xor    %ecx,%ecx
  400542:	31 f6                	xor    %esi,%esi
  400544:	ba 60 06 40 00       	mov    $0x400660,%edx
  400549:	e8 72 ff ff ff       	callq  4004c0 <pthread_create@plt>
  40054e:	8b 05 f0 0a 20 00    	mov    0x200af0(%rip),%eax        # 601044 <loop_mark>
  400554:	85 c0                	test   %eax,%eax
  400556:	74 02                	je     40055a <main+0x4a>
  400558:	eb fe                	jmp    400558 <main+0x48>
  40055a:	48 8b 35 ff 0a 20 00 	mov    0x200aff(%rip),%rsi        # 601060 <loop_count>
  400561:	bf a1 07 40 00       	mov    $0x4007a1,%edi
  400566:	31 c0                	xor    %eax,%eax
  400568:	e8 63 ff ff ff       	callq  4004d0 <printf@plt>
  40056d:	31 c0                	xor    %eax,%eax
  40056f:	48 83 c4 18          	add    $0x18,%rsp
  400573:	c3                   	retq   

0000000000400574 <_start>:
  400574:	31 ed                	xor    %ebp,%ebp
  400576:	49 89 d1             	mov    %rdx,%r9
  400579:	5e                   	pop    %rsi
  40057a:	48 89 e2             	mov    %rsp,%rdx
  40057d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400581:	50                   	push   %rax
  400582:	54                   	push   %rsp
  400583:	49 c7 c0 40 07 40 00 	mov    $0x400740,%r8
  40058a:	48 c7 c1 d0 06 40 00 	mov    $0x4006d0,%rcx
  400591:	48 c7 c7 10 05 40 00 	mov    $0x400510,%rdi
  400598:	e8 43 ff ff ff       	callq  4004e0 <__libc_start_main@plt>
  40059d:	f4                   	hlt    
  40059e:	66 90                	xchg   %ax,%ax

00000000004005a0 <deregister_tm_clones>:
  4005a0:	b8 5f 10 60 00       	mov    $0x60105f,%eax
  4005a5:	55                   	push   %rbp
  4005a6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005ac:	48 83 f8 0e          	cmp    $0xe,%rax
  4005b0:	48 89 e5             	mov    %rsp,%rbp
  4005b3:	77 02                	ja     4005b7 <deregister_tm_clones+0x17>
  4005b5:	5d                   	pop    %rbp
  4005b6:	c3                   	retq   
  4005b7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005bc:	48 85 c0             	test   %rax,%rax
  4005bf:	74 f4                	je     4005b5 <deregister_tm_clones+0x15>
  4005c1:	5d                   	pop    %rbp
  4005c2:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005c7:	ff e0                	jmpq   *%rax
  4005c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005d0 <register_tm_clones>:
  4005d0:	b8 58 10 60 00       	mov    $0x601058,%eax
  4005d5:	55                   	push   %rbp
  4005d6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005dc:	48 c1 f8 03          	sar    $0x3,%rax
  4005e0:	48 89 e5             	mov    %rsp,%rbp
  4005e3:	48 89 c2             	mov    %rax,%rdx
  4005e6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4005ea:	48 01 d0             	add    %rdx,%rax
  4005ed:	48 d1 f8             	sar    %rax
  4005f0:	75 02                	jne    4005f4 <register_tm_clones+0x24>
  4005f2:	5d                   	pop    %rbp
  4005f3:	c3                   	retq   
  4005f4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005f9:	48 85 d2             	test   %rdx,%rdx
  4005fc:	74 f4                	je     4005f2 <register_tm_clones+0x22>
  4005fe:	5d                   	pop    %rbp
  4005ff:	48 89 c6             	mov    %rax,%rsi
  400602:	bf 58 10 60 00       	mov    $0x601058,%edi
  400607:	ff e2                	jmpq   *%rdx
  400609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400610 <__do_global_dtors_aux>:
  400610:	80 3d 41 0a 20 00 00 	cmpb   $0x0,0x200a41(%rip)        # 601058 <__TMC_END__>
  400617:	75 11                	jne    40062a <__do_global_dtors_aux+0x1a>
  400619:	55                   	push   %rbp
  40061a:	48 89 e5             	mov    %rsp,%rbp
  40061d:	e8 7e ff ff ff       	callq  4005a0 <deregister_tm_clones>
  400622:	5d                   	pop    %rbp
  400623:	c6 05 2e 0a 20 00 01 	movb   $0x1,0x200a2e(%rip)        # 601058 <__TMC_END__>
  40062a:	f3 c3                	repz retq 
  40062c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400630 <frame_dummy>:
  400630:	48 83 3d d8 07 20 00 	cmpq   $0x0,0x2007d8(%rip)        # 600e10 <__JCR_END__>
  400637:	00 
  400638:	74 1e                	je     400658 <frame_dummy+0x28>
  40063a:	b8 00 00 00 00       	mov    $0x0,%eax
  40063f:	48 85 c0             	test   %rax,%rax
  400642:	74 14                	je     400658 <frame_dummy+0x28>
  400644:	55                   	push   %rbp
  400645:	bf 10 0e 60 00       	mov    $0x600e10,%edi
  40064a:	48 89 e5             	mov    %rsp,%rbp
  40064d:	ff d0                	callq  *%rax
  40064f:	5d                   	pop    %rbp
  400650:	e9 7b ff ff ff       	jmpq   4005d0 <register_tm_clones>
  400655:	0f 1f 00             	nopl   (%rax)
  400658:	e9 73 ff ff ff       	jmpq   4005d0 <register_tm_clones>
  40065d:	0f 1f 00             	nopl   (%rax)

0000000000400660 <thread_func>:
  400660:	48 83 ec 08          	sub    $0x8,%rsp
  400664:	bf 01 00 00 00       	mov    $0x1,%edi
  400669:	e8 92 fe ff ff       	callq  400500 <sleep@plt>
  40066e:	31 f6                	xor    %esi,%esi
  400670:	bf 60 07 40 00       	mov    $0x400760,%edi
  400675:	31 c0                	xor    %eax,%eax
  400677:	c7 05 c3 09 20 00 00 	movl   $0x0,0x2009c3(%rip)        # 601044 <loop_mark>
  40067e:	00 00 00 
  400681:	e8 4a fe ff ff       	callq  4004d0 <printf@plt>
  400686:	48 83 c4 08          	add    $0x8,%rsp
  40068a:	c3                   	retq   
  40068b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400690 <func_order>:
  400690:	8b 05 ba 09 20 00    	mov    0x2009ba(%rip),%eax        # 601050 <num_aa>
  400696:	c7 05 a8 09 20 00 05 	movl   $0x5,0x2009a8(%rip)        # 601048 <num_cc>
  40069d:	00 00 00 
  4006a0:	89 05 a6 09 20 00    	mov    %eax,0x2009a6(%rip)        # 60104c <num_bb>
  4006a6:	c3                   	retq   
  4006a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4006ae:	00 00 

00000000004006b0 <func_loop>:
  4006b0:	8b 05 8e 09 20 00    	mov    0x20098e(%rip),%eax        # 601044 <loop_mark>
  4006b6:	85 c0                	test   %eax,%eax
  4006b8:	74 06                	je     4006c0 <func_loop+0x10>
  4006ba:	eb fe                	jmp    4006ba <func_loop+0xa>
  4006bc:	0f 1f 40 00          	nopl   0x0(%rax)
  4006c0:	f3 c3                	repz retq 
  4006c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006c9:	00 00 00 
  4006cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004006d0 <__libc_csu_init>:
  4006d0:	41 57                	push   %r15
  4006d2:	41 89 ff             	mov    %edi,%r15d
  4006d5:	41 56                	push   %r14
  4006d7:	49 89 f6             	mov    %rsi,%r14
  4006da:	41 55                	push   %r13
  4006dc:	49 89 d5             	mov    %rdx,%r13
  4006df:	41 54                	push   %r12
  4006e1:	4c 8d 25 18 07 20 00 	lea    0x200718(%rip),%r12        # 600e00 <__frame_dummy_init_array_entry>
  4006e8:	55                   	push   %rbp
  4006e9:	48 8d 2d 18 07 20 00 	lea    0x200718(%rip),%rbp        # 600e08 <__init_array_end>
  4006f0:	53                   	push   %rbx
  4006f1:	4c 29 e5             	sub    %r12,%rbp
  4006f4:	31 db                	xor    %ebx,%ebx
  4006f6:	48 c1 fd 03          	sar    $0x3,%rbp
  4006fa:	48 83 ec 08          	sub    $0x8,%rsp
  4006fe:	e8 85 fd ff ff       	callq  400488 <_init>
  400703:	48 85 ed             	test   %rbp,%rbp
  400706:	74 1e                	je     400726 <__libc_csu_init+0x56>
  400708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40070f:	00 
  400710:	4c 89 ea             	mov    %r13,%rdx
  400713:	4c 89 f6             	mov    %r14,%rsi
  400716:	44 89 ff             	mov    %r15d,%edi
  400719:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40071d:	48 83 c3 01          	add    $0x1,%rbx
  400721:	48 39 eb             	cmp    %rbp,%rbx
  400724:	75 ea                	jne    400710 <__libc_csu_init+0x40>
  400726:	48 83 c4 08          	add    $0x8,%rsp
  40072a:	5b                   	pop    %rbx
  40072b:	5d                   	pop    %rbp
  40072c:	41 5c                	pop    %r12
  40072e:	41 5d                	pop    %r13
  400730:	41 5e                	pop    %r14
  400732:	41 5f                	pop    %r15
  400734:	c3                   	retq   
  400735:	90                   	nop
  400736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40073d:	00 00 00 

0000000000400740 <__libc_csu_fini>:
  400740:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400744 <_fini>:
  400744:	48 83 ec 08          	sub    $0x8,%rsp
  400748:	48 83 c4 08          	add    $0x8,%rsp
  40074c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400750 <_IO_stdin_used>:
  400750:	01 00                	add    %eax,(%rax)
  400752:	02 00                	add    (%rax),%al
  400754:	00 00                	add    %al,(%rax)
	...

0000000000400758 <__dso_handle>:
	...
  400760:	20 74 68 72          	and    %dh,0x72(%rax,%rbp,2)
  400764:	65 61                	gs (bad) 
  400766:	64 20 75 70          	and    %dh,%fs:0x70(%rbp)
  40076a:	64 61                	fs (bad) 
  40076c:	74 65                	je     4007d3 <__GNU_EH_FRAME_HDR+0x1b>
  40076e:	20 6c 6f 6f          	and    %ch,0x6f(%rdi,%rbp,2)
  400772:	70 5f                	jo     4007d3 <__GNU_EH_FRAME_HDR+0x1b>
  400774:	6d                   	insl   (%dx),%es:(%rdi)
  400775:	61                   	(bad)  
  400776:	72 6b                	jb     4007e3 <__GNU_EH_FRAME_HDR+0x2b>
  400778:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
  40077c:	25 64 20 0a 00       	and    $0xa2064,%eax
  400781:	00 00                	add    %al,(%rax)
  400783:	00 00                	add    %al,(%rax)
  400785:	00 00                	add    %al,(%rax)
  400787:	00 20                	add    %ah,(%rax)
  400789:	6e                   	outsb  %ds:(%rsi),(%dx)
  40078a:	75 6d                	jne    4007f9 <__GNU_EH_FRAME_HDR+0x41>
  40078c:	20 20                	and    %ah,(%rax)
  40078e:	62 62                	(bad)  
  400790:	20 3d 20 25 64 20    	and    %bh,0x20642520(%rip)        # 20a42cb6 <_end+0x20441c4e>
  400796:	20 63 63             	and    %ah,0x63(%rbx)
  400799:	20 3d 20 25 64 20    	and    %bh,0x20642520(%rip)        # 20a42cbf <_end+0x20441c57>
  40079f:	0a 00                	or     (%rax),%al
  4007a1:	20 6c 6f 6f          	and    %ch,0x6f(%rdi,%rbp,2)
  4007a5:	70 20                	jo     4007c7 <__GNU_EH_FRAME_HDR+0xf>
  4007a7:	20 63 6f             	and    %ah,0x6f(%rbx)
  4007aa:	75 6e                	jne    40081a <__GNU_EH_FRAME_HDR+0x62>
  4007ac:	74 20                	je     4007ce <__GNU_EH_FRAME_HDR+0x16>
  4007ae:	3d 20 25 6c 6c       	cmp    $0x6c6c2520,%eax
  4007b3:	64 20 0a             	and    %cl,%fs:(%rdx)
	...

Disassembly of section .eh_frame_hdr:

00000000004007b8 <__GNU_EH_FRAME_HDR>:
  4007b8:	01 1b                	add    %ebx,(%rbx)
  4007ba:	03 3b                	add    (%rbx),%edi
  4007bc:	4c 00 00             	rex.WR add %r8b,(%rax)
  4007bf:	00 08                	add    %cl,(%rax)
  4007c1:	00 00                	add    %al,(%rax)
  4007c3:	00 f8                	add    %bh,%al
  4007c5:	fc                   	cld    
  4007c6:	ff                   	(bad)  
  4007c7:	ff 98 00 00 00 58    	lcall  *0x58000000(%rax)
  4007cd:	fd                   	std    
  4007ce:	ff                   	(bad)  
  4007cf:	ff 08                	decl   (%rax)
  4007d1:	01 00                	add    %eax,(%rax)
  4007d3:	00 bc fd ff ff 68 00 	add    %bh,0x68ffff(%rbp,%rdi,8)
  4007da:	00 00                	add    %al,(%rax)
  4007dc:	a8 fe                	test   $0xfe,%al
  4007de:	ff                   	(bad)  
  4007df:	ff c0                	inc    %eax
  4007e1:	00 00                	add    %al,(%rax)
  4007e3:	00 d8                	add    %bl,%al
  4007e5:	fe                   	(bad)  
  4007e6:	ff                   	(bad)  
  4007e7:	ff                   	(bad)  
  4007e8:	d8 00                	fadds  (%rax)
  4007ea:	00 00                	add    %al,(%rax)
  4007ec:	f8                   	clc    
  4007ed:	fe                   	(bad)  
  4007ee:	ff                   	(bad)  
  4007ef:	ff f0                	push   %rax
  4007f1:	00 00                	add    %al,(%rax)
  4007f3:	00 18                	add    %bl,(%rax)
  4007f5:	ff                   	(bad)  
  4007f6:	ff                   	(bad)  
  4007f7:	ff 20                	jmpq   *(%rax)
  4007f9:	01 00                	add    %eax,(%rax)
  4007fb:	00 88 ff ff ff 68    	add    %cl,0x68ffffff(%rax)
  400801:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400808 <__FRAME_END__-0x130>:
  400808:	14 00                	adc    $0x0,%al
  40080a:	00 00                	add    %al,(%rax)
  40080c:	00 00                	add    %al,(%rax)
  40080e:	00 00                	add    %al,(%rax)
  400810:	01 7a 52             	add    %edi,0x52(%rdx)
  400813:	00 01                	add    %al,(%rcx)
  400815:	78 10                	js     400827 <__GNU_EH_FRAME_HDR+0x6f>
  400817:	01 1b                	add    %ebx,(%rbx)
  400819:	0c 07                	or     $0x7,%al
  40081b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400821:	00 00                	add    %al,(%rax)
  400823:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400826:	00 00                	add    %al,(%rax)
  400828:	4c fd                	rex.WR std 
  40082a:	ff                   	(bad)  
  40082b:	ff 2a                	ljmp   *(%rdx)
	...
  400835:	00 00                	add    %al,(%rax)
  400837:	00 14 00             	add    %dl,(%rax,%rax,1)
  40083a:	00 00                	add    %al,(%rax)
  40083c:	00 00                	add    %al,(%rax)
  40083e:	00 00                	add    %al,(%rax)
  400840:	01 7a 52             	add    %edi,0x52(%rdx)
  400843:	00 01                	add    %al,(%rcx)
  400845:	78 10                	js     400857 <__GNU_EH_FRAME_HDR+0x9f>
  400847:	01 1b                	add    %ebx,(%rbx)
  400849:	0c 07                	or     $0x7,%al
  40084b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400851:	00 00                	add    %al,(%rax)
  400853:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400856:	00 00                	add    %al,(%rax)
  400858:	58                   	pop    %rax
  400859:	fc                   	cld    
  40085a:	ff                   	(bad)  
  40085b:	ff 60 00             	jmpq   *0x0(%rax)
  40085e:	00 00                	add    %al,(%rax)
  400860:	00 0e                	add    %cl,(%rsi)
  400862:	10 46 0e             	adc    %al,0xe(%rsi)
  400865:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400868:	0b 77 08             	or     0x8(%rdi),%esi
  40086b:	80 00 3f             	addb   $0x3f,(%rax)
  40086e:	1a 3b                	sbb    (%rbx),%bh
  400870:	2a 33                	sub    (%rbx),%dh
  400872:	24 22                	and    $0x22,%al
  400874:	00 00                	add    %al,(%rax)
  400876:	00 00                	add    %al,(%rax)
  400878:	14 00                	adc    $0x0,%al
  40087a:	00 00                	add    %al,(%rax)
  40087c:	44 00 00             	add    %r8b,(%rax)
  40087f:	00 e0                	add    %ah,%al
  400881:	fd                   	std    
  400882:	ff                   	(bad)  
  400883:	ff 2b                	ljmp   *(%rbx)
  400885:	00 00                	add    %al,(%rax)
  400887:	00 00                	add    %al,(%rax)
  400889:	44 0e                	rex.R (bad) 
  40088b:	10 66 0e             	adc    %ah,0xe(%rsi)
  40088e:	08 00                	or     %al,(%rax)
  400890:	14 00                	adc    $0x0,%al
  400892:	00 00                	add    %al,(%rax)
  400894:	5c                   	pop    %rsp
  400895:	00 00                	add    %al,(%rax)
  400897:	00 f8                	add    %bh,%al
  400899:	fd                   	std    
  40089a:	ff                   	(bad)  
  40089b:	ff 17                	callq  *(%rdi)
	...
  4008a5:	00 00                	add    %al,(%rax)
  4008a7:	00 14 00             	add    %dl,(%rax,%rax,1)
  4008aa:	00 00                	add    %al,(%rax)
  4008ac:	74 00                	je     4008ae <__GNU_EH_FRAME_HDR+0xf6>
  4008ae:	00 00                	add    %al,(%rax)
  4008b0:	00 fe                	add    %bh,%dh
  4008b2:	ff                   	(bad)  
  4008b3:	ff 12                	callq  *(%rdx)
	...
  4008bd:	00 00                	add    %al,(%rax)
  4008bf:	00 14 00             	add    %dl,(%rax,%rax,1)
  4008c2:	00 00                	add    %al,(%rax)
  4008c4:	8c 00                	mov    %es,(%rax)
  4008c6:	00 00                	add    %al,(%rax)
  4008c8:	48 fc                	rex.W cld 
  4008ca:	ff                   	(bad)  
  4008cb:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
  4008cf:	00 00                	add    %al,(%rax)
  4008d1:	44 0e                	rex.R (bad) 
  4008d3:	20 02                	and    %al,(%rdx)
  4008d5:	5f                   	pop    %rdi
  4008d6:	0e                   	(bad)  
  4008d7:	08 44 00 00          	or     %al,0x0(%rax,%rax,1)
  4008db:	00 a4 00 00 00 f0 fd 	add    %ah,-0x2100000(%rax,%rax,1)
  4008e2:	ff                   	(bad)  
  4008e3:	ff 65 00             	jmpq   *0x0(%rbp)
  4008e6:	00 00                	add    %al,(%rax)
  4008e8:	00 42 0e             	add    %al,0xe(%rdx)
  4008eb:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  4008f1:	8e 03                	mov    (%rbx),%es
  4008f3:	45 0e                	rex.RB (bad) 
  4008f5:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  4008fb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701749 <_end+0xffffffff861006e1>
  400901:	06                   	(bad)  
  400902:	48 0e                	rex.W (bad) 
  400904:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40090a:	6c                   	insb   (%dx),%es:(%rdi)
  40090b:	0e                   	(bad)  
  40090c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40090f:	30 41 0e             	xor    %al,0xe(%rcx)
  400912:	28 42 0e             	sub    %al,0xe(%rdx)
  400915:	20 42 0e             	and    %al,0xe(%rdx)
  400918:	18 42 0e             	sbb    %al,0xe(%rdx)
  40091b:	10 42 0e             	adc    %al,0xe(%rdx)
  40091e:	08 00                	or     %al,(%rax)
  400920:	14 00                	adc    $0x0,%al
  400922:	00 00                	add    %al,(%rax)
  400924:	ec                   	in     (%dx),%al
  400925:	00 00                	add    %al,(%rax)
  400927:	00 18                	add    %bl,(%rax)
  400929:	fe                   	(bad)  
  40092a:	ff                   	(bad)  
  40092b:	ff 02                	incl   (%rdx)
	...

0000000000400938 <__FRAME_END__>:
  400938:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e00 <__frame_dummy_init_array_entry>:
  600e00:	30 06                	xor    %al,(%rsi)
  600e02:	40 00 00             	add    %al,(%rax)
  600e05:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e08 <__do_global_dtors_aux_fini_array_entry>:
  600e08:	10 06                	adc    %al,(%rsi)
  600e0a:	40 00 00             	add    %al,(%rax)
  600e0d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e10 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e18 <_DYNAMIC>:
  600e18:	01 00                	add    %eax,(%rax)
  600e1a:	00 00                	add    %al,(%rax)
  600e1c:	00 00                	add    %al,(%rax)
  600e1e:	00 00                	add    %al,(%rax)
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	20 00                	and    %al,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	88 04 40             	mov    %al,(%rax,%rax,2)
  600e43:	00 00                	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x35>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 44 07 40          	add    %al,0x40(%rdi,%rax,1)
  600e53:	00 00                	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
	...
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 08                	add    %cl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x95>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 48 03             	add    %cl,0x3(%rax)
  600eb2:	40 00 00             	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 06                	add    %al,(%rsi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xd5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xfa>
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 10                	add    %dl,(%rax)
  600f31:	04 40                	add    $0x40,%al
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 f8                	add    %bh,%al
  600f41:	03 40 00             	add    0x0(%rax),%eax
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	08 00                	or     %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	18 00                	sbb    %al,(%rax)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	09 00                	or     %eax,(%rax)
  600f5a:	00 00                	add    %al,(%rax)
  600f5c:	00 00                	add    %al,(%rax)
  600f5e:	00 00                	add    %al,(%rax)
  600f60:	18 00                	sbb    %al,(%rax)
  600f62:	00 00                	add    %al,(%rax)
  600f64:	00 00                	add    %al,(%rax)
  600f66:	00 00                	add    %al,(%rax)
  600f68:	fe                   	(bad)  
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 b8 03 40 00 00    	add    %bh,0x4003(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 02                	add    %al,(%rdx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 ac 03 40 00 00 00 	add    %ch,0x40(%rbx,%rax,1)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	18 0e                	sbb    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 c6                	add    %al,%dh
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 d6                	add    %dl,%dh
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 e6                	add    %ah,%dh
  601029:	04 40                	add    $0x40,%al
  60102b:	00 00                	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 f6                	add    %dh,%dh
  601031:	04 40                	add    $0x40,%al
  601033:	00 00                	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 06                	add    %al,(%rsi)
  601039:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
  601040:	00 00                	add    %al,(%rax)
	...

0000000000601044 <loop_mark>:
  601044:	01 00                	add    %eax,(%rax)
	...

0000000000601048 <num_cc>:
  601048:	03 00                	add    (%rax),%eax
	...

000000000060104c <num_bb>:
  60104c:	02 00                	add    (%rax),%al
	...

0000000000601050 <num_aa>:
  601050:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .bss:

0000000000601058 <completed.6355>:
	...

0000000000601060 <loop_count>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	38 2e                	cmp    %ch,(%rsi)
   f:	35 20 32 30 31       	xor    $0x31303220,%eax
  14:	35 30 36 32 33       	xor    $0x33323630,%eax
  19:	20 28                	and    %ch,(%rax)
  1b:	52                   	push   %rdx
  1c:	65 64 20 48 61       	gs and %cl,%fs:0x61(%rax)
  21:	74 20                	je     43 <_init-0x400445>
  23:	34 2e                	xor    $0x2e,%al
  25:	38 2e                	cmp    %ch,(%rsi)
  27:	35 2d 34 34 29       	xor    $0x2934342d,%eax
	...
