作者：代兴
503268771@qq.com

本书写于2023年10月至2024年6月，历时8个月。本书凝聚了我多年的学习、思考、实践，技术的集大成者。
书写完后，我陆续联系了多家出版社，结果都没能出版。有些出版社一开始就拒绝了，个别出版社在走审批流程最后被领导拒绝了，其他出版社则没有回声。
出版社给的反馈集中在：“底层技术，读者少”，“汇编内容难度高”，“缺少趣味性，不够通俗”。
作为程序员，我清楚，技术人需要技术深度，底层原理永远重要。所以，我一直想写硬核书，产出自己的作品。
如果大家有出版的方法，请告诉我，提前谢过。
如果大家发现书中不准确的地方，欢迎指正，不胜感激。

本书的主旨：全面讲解程序原理。
程序原理，属于中级高级知识，有难度、有深度，非常硬核。
我在写作时，就对标Unix编程艺术、编译原理、操作系统、linux编程这类经典书。
常规的讲解方法，理论+实践，适合这类大部头书。

本书的代码，包括汇编、C、Java。其中，汇编代码大约占比5分之1 。
汇编指令章节，全部使用汇编代码讲解。
其他章节，汇编代码不是主体，而是辅助说明。比如，用C讲解指针时，对比C代码、汇编代码，分析内存操作。

读者不需要把汇编学的很深入。大体看懂汇编代码的含义，了解常用的汇编指令，对于本书就够了。
如果读者感到汇编难，可以先看其他章节，回头再慢慢看汇编。
从底层到上层，串联知识图谱，是我建议的学习方式。

我推荐，贴出可以运行的完整代码。
一方面，参考python、C、C++这些经典书。
一方面，完整代码让读者容易上手、调试，降低学习难度。利于传播。

本书的读者对象有三类：
1、初级读者。包括学生群体、刚参加工作的年轻人，把本书当做一本百科全书，学习理论知识，上手熟悉代码，给职业生涯提高台阶。
2、中级读者。包括工作多年的人员、渴望提升自身技术实力的人员，把本书当做一本进阶书，结合自身多年的工作经历，学习各个知识点，理解各种原理，完成高质量的技术项目。
3、高级读者。包括架构师、技术经理、CTO等人员，底层技术决定上层建筑的稳定性，打造高并发高性能的架构设计，需要底层技术支撑。学习本书，修炼内功。


